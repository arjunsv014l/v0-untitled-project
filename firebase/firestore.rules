rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Common functions
    function isSignedIn() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return isSignedIn() && request.auth.uid == userId;
    }
    
    function isAdmin() {
      return isSignedIn() && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // User profiles
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
      
      // User subcollections
      match /{subcollection}/{docId} {
        allow read: if isSignedIn() && (isOwner(userId) || isAdmin());
        allow write: if isSignedIn() && (isOwner(userId) || isAdmin());
      }
    }
    
    // Allow authenticated users to read and write their own registration
    match /registrations/{registrationId} {
      allow read: if request.auth != null && resource.data.userId == request.auth.uid;
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
      allow update: if request.auth != null && resource.data.userId == request.auth.uid;
    }
    
    // Stats collection for user counter
    match /stats/userCounter {
      allow read: if true; // Public read for displaying user count
      allow write: if request.auth != null; // Only authenticated users can increment
    }
    
    // Allow anyone to read public data
    match /public/{document=**} {
      allow read: if true;
    }
    
    // Other collections
    match /{collection}/{docId} {
      allow read: if isSignedIn();
      allow write: if isSignedIn() && isAdmin();
    }
    
    // Admin access
    match /{document=**} {
      allow read, write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
  }
}
